<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on #Define</title>
    <link>https://www.mystash.github.io/notes/</link>
    <description>Recent content in Notes on #Define</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.mystash.github.io/notes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>All Coding Blocks Notes</title>
      <link>https://www.mystash.github.io/notes/2018-07-08-all/</link>
      <pubDate>Fri, 01 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mystash.github.io/notes/2018-07-08-all/</guid>
      <description>Here are the links for all the notes from Coding Blocks. [Day-4] - Functions and Arrays</description>
    </item>
    
    <item>
      <title>CB[Day-4] Functions and Arrays</title>
      <link>https://www.mystash.github.io/notes/2018-06-01-day-4/</link>
      <pubDate>Fri, 01 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mystash.github.io/notes/2018-06-01-day-4/</guid>
      <description>Precedence of Operators  Division and Multiplication has same priority/precedence - to resolve, we use associativity (Left-to-Right).  Arrays  Arrays are Garbage Declared, Zero Initialized. Bound Checking is not done in C++, no compilation error when ArrayOutOfBound.  Errors  Logical Errors - Difficult to Debug. Semantics Errors - aka Compile Time Errors. Runtime Errors - Pass the Compilation but program fails during Runtime.like dividing by 0.  Undefined Behaviour No behaviour can be defined beforehand even in the same environment.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.mystash.github.io/notes/2018-06-03-day-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.mystash.github.io/notes/2018-06-03-day-5/</guid>
      <description>Pass by Reference  void myswap(int &amp;amp;n1, int &amp;amp;n2) //formal parameters /*Called Function Pass by Reference*/ { int temp=n1; n1=n2; n2=temp; } int main() // Calling Function { int a,b; cin&amp;gt;&amp;gt;a&amp;gt;&amp;gt;b; myswap(a,b); //arguments or actual parameters // Function call independent of pass method cout&amp;lt;&amp;lt;a&amp;lt;&amp;lt;&amp;quot; &amp;quot;&amp;lt;&amp;lt;b; }   **Pass by Value Pass by Reference** New variables are created New variables are _not_ created, new names are given to the existing **variables**.</description>
    </item>
    
  </channel>
</rss>